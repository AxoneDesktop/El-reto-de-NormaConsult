import os
from dotenv import load_dotenv
from rag_engine import RAGEngine

load_dotenv()

# Rutas de datos
NORMATIVAS_DIR = 'data/normativas'
TICKETS_FILE = 'data/tickets.json'

def test_rag_system():
    print("üîç Iniciando prueba del sistema RAG...")
    
    # Verificar la API key
    print("\nVerificando API key de OpenAI...")
    api_key = os.getenv('OPENAI_API_KEY')
    if api_key:
        print(f"‚úÖ API key encontrada: {api_key[:10]}...")
    else:
        print("‚ùå API key no encontrada")
    
    # 1. Probar inicializaci√≥n del motor RAG
    print("\n1. Inicializando RAG Engine...")
    try:
        rag = RAGEngine(NORMATIVAS_DIR, TICKETS_FILE)
        print("‚úÖ RAG Engine inicializado correctamente")
    except Exception as e:
        print(f"‚ùå Error al inicializar RAG Engine: {str(e)}")
        return
    
    # 2. Probar b√∫squeda sem√°ntica
    print("\n2. Probando b√∫squeda sem√°ntica...")
    try:
        query = "requisitos de aislamiento t√©rmico en edificios"
        results = rag.search_normativas(query)
        print(f"‚úÖ B√∫squeda exitosa - Encontrados {len(results)} resultados")
        if results:
            print("\nPrimer resultado:")
            print(f"Documento: {results[0]['documento']}")
            print(f"Relevancia: {1 - results[0]['score']/10:.2%}")
            print("Extracto:", results[0]['contenido'][:200], "...")
    except Exception as e:
        print(f"‚ùå Error en b√∫squeda sem√°ntica: {str(e)}")
    
    # 3. Probar b√∫squeda de tickets similares
    print("\n3. Probando b√∫squeda de tickets similares...")
    try:
        query = "necesito informaci√≥n sobre los requisitos de ventilaci√≥n"
        similar_tickets = rag.find_similar_tickets(query)
        print(f"‚úÖ B√∫squeda de tickets similares exitosa - Encontrados {len(similar_tickets)} tickets")
    except Exception as e:
        print(f"‚ùå Error en b√∫squeda de tickets similares: {str(e)}")
    
    # 4. Probar generaci√≥n de respuesta
    print("\n4. Probando generaci√≥n de respuesta...")
    try:
        if os.getenv('OPENAI_API_KEY'):
            context = rag.search_normativas("ventilaci√≥n en viviendas")
            response = rag.generate_response("¬øCu√°les son los requisitos de ventilaci√≥n para una vivienda?", context)
            print("‚úÖ Generaci√≥n de respuesta exitosa")
            print("\nRespuesta generada:", response[:200], "...")
        else:
            print("‚ö†Ô∏è Omitiendo prueba de generaci√≥n - No se encontr√≥ OPENAI_API_KEY")
    except Exception as e:
        print(f"‚ùå Error en generaci√≥n de respuesta: {str(e)}")
    
    print("\n‚ú® Pruebas completadas")

if __name__ == "__main__":
    test_rag_system()